basePath: /
definitions:
  internal_transport_http_handler.AuthResponse:
    properties:
      access_exp:
        type: string
      access_token:
        type: string
      refresh_exp:
        type: string
      refresh_token:
        type: string
    type: object
  internal_transport_http_handler.ClientTokenRequest:
    properties:
      audience:
        items:
          type: string
        type: array
      client_id:
        type: string
      client_secret:
        type: string
      scopes:
        items:
          type: string
        type: array
    required:
    - client_id
    - client_secret
    type: object
  internal_transport_http_handler.ClientTokenResponse:
    properties:
      access_exp:
        type: string
      access_token:
        type: string
    type: object
  internal_transport_http_handler.IntrospectRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  internal_transport_http_handler.IntrospectResponse:
    properties:
      active:
        type: boolean
      aud:
        items:
          type: string
        type: array
      email:
        type: string
      roles:
        items:
          type: string
        type: array
      scope:
        items:
          type: string
        type: array
      sub:
        type: string
      subject_type:
        type: string
    type: object
  internal_transport_http_handler.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: "123456"
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  internal_transport_http_handler.LogoutRequest:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  internal_transport_http_handler.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  internal_transport_http_handler.RefreshResponse:
    properties:
      access_exp:
        type: string
      access_token:
        type: string
      refresh_exp:
        type: string
      refresh_token:
        type: string
    type: object
  internal_transport_http_handler.SignUpRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: "123456"
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
host: localhost:8080
info:
  contact:
    name: Yuri Garcia Ribeiro
    url: https://github.com/YuriGarciaRibeiro/auth-microservice-go
  description: Serviço de autenticação centralizado com JWT
  title: Auth Microservice API
  version: "1.0"
paths:
  /auth/introspect:
    post:
      consumes:
      - application/json
      description: Validates an access token and returns whether it's active along
        with principal info
      parameters:
      - description: Token to introspect
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_handler.IntrospectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_handler.IntrospectResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Introspect an access token
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with email and password, returning a JWT token
      parameters:
      - description: User login credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_handler.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Authenticate a user
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: 'Revokes the provided tokens: access is blacklisted; refresh is
        removed from Redis.'
      parameters:
      - description: Tokens to revoke
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_handler.LogoutRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout and revoke tokens
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Exchanges a valid refresh token for a new access+refresh pair
      parameters:
      - description: Refresh token payload
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_handler.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_handler.RefreshResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Rotate tokens using a valid refresh token
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Creates a new user account and returns an access+refresh token
        pair
      parameters:
      - description: User registration data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_handler.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_transport_http_handler.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /auth/token:
    post:
      consumes:
      - application/json
      description: Issue access token for client credentials grant
      parameters:
      - description: Client credentials payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_handler.ClientTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transport_http_handler.ClientTokenResponse'
        "400":
          description: Invalid payload
          schema:
            type: string
        "401":
          description: Invalid client credentials
          schema:
            type: string
        "422":
          description: Validation failed
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Client Token
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
